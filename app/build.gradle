plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "net.barbierdereuille.lightsystem"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility "1.8"
        targetCompatibility "1.8"
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

//    testOptions {
//        devices {
//            pixel2api29 (com.android.build.api.dsl.ManagedVirtualDevice) {
//                // Use device profiles you typically see in
//                // Android Studio
//                device = "Pixel 2"
//                apiLevel = 29
//                // You can also specify "aosp" if you don’t require
//                // Google Play Services.
//                systemImageSource = "google"
//                abi = "x86"
//            }
//            pixel2api31 (com.android.build.api.dsl.ManagedVirtualDevice) {
//                // Use device profiles you typically see in
//                // Android Studio
//                device = "Pixel 2 - Api 31"
//                apiLevel = 31
//                // You can also specify "aosp" if you don’t require
//                // Google Play Services.
//                systemImageSource = "google"
//                abi = "x86"
//            }
//        }
//    }
}

dependencies {
    def roomVersion = "2.4.0"
    def workVersion = '2.7.1'
    def lifecycleVersion = '2.2.0'

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_version"
    kapt "androidx.room:room-compiler:$roomVersion"

    implementation "androidx.core:core-ktx:1.7.0"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:1.0.0-alpha02"
    implementation "androidx.compose.runtime:runtime-livedata:1.0.5"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"
    implementation "androidx.activity:activity-compose:1.4.0"
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:hilt-android:$dagger_version"
    implementation "androidx.work:work-runtime-ktx:$workVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    annotationProcessor "androidx.room:room-compiler:$roomVersion"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "androidx.work:work-testing:$workVersion"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}